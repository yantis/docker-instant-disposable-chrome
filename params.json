{"name":"Docker-instant-disposable-chrome","tagline":"Instant Disposable Google Chrome Docker Container","body":"# instant-disposable-chrome\r\n\r\nOn Docker hub [instant-disposable-chrome](https://registry.hub.docker.com/u/yantis/instant-disposable-chrome/)\r\non Github [docker-instant-disposable-chrome](https://github.com/yantis/docker-instant-disposable-chrome)\r\n\r\nI find myself every once in a while wanting to checkout a website but not from my IP address.\r\nYou might want to do the same. Possibly for anonymous reasons (ie: checking out a competitor), \r\ntesting or maybe u want to want a lot more bandwidth that you usually have.\r\n\r\nThe script will create a brand new base Amazon Linux instance, then install docker, and setup\r\nGoogle Chrome over SSH using X-forwarding and then load up Chrome with the website of your choosing.\r\nWhen you close the webpage it will delete the instance. All without any interaction from you.\r\n\r\nYou may want to modify the script for something other than AWS or just use the container locally \r\nIf you are looking at using it for something else checkout the base image [here](https://github.com/yantis/docker-ssh-hpn-x)\r\n\r\nIt is setup to work with Amazon's free tier instances.\r\n\r\n### Docker Images Structure\r\n>[yantis/archlinux-tiny](https://github.com/yantis/docker-archlinux-tiny)\r\n>>[yantis/archlinux-small](https://github.com/yantis/docker-archlinux-small)\r\n>>>[yantis/archlinux-small-ssh-hpn](https://github.com/yantis/docker-archlinux-ssh-hpn)\r\n>>>>[yantis/ssh-hpn-x](https://github.com/yantis/docker-ssh-hpn-x)\r\n>>>>>[yantis/dynamic-video](https://github.com/yantis/docker-dynamic-video)\r\n>>>>>[yantis/instant-disposable-chrome](https://github.com/yantis/docker-instant-disposable-chrome)\r\n>>>>>[yantis/filezilla](https://github.com/yantis/docker-filezilla)\r\n>>>>>[yantis/thunderbird](https://github.com/yantis/docker-thunderbird)\r\n>>>>>>[yantis/virtualgl](https://github.com/yantis/docker-virtualgl)\r\n>>>>>>>[yantis/wine](https://github.com/yantis/docker-wine)\r\n\r\n\r\n## Setup\r\nAt a minimum you need to set up your private key name and your subnet ID in the \"instant-chrome\" file.\r\nYou are also going to need to have [aws cli](https://github.com/aws/aws-cli) installed.\r\nOn Arch Linux this is on the AUR as [aws-cli](https://aur.archlinux.org/packages/aws-cli)\r\n\r\n```bash\r\nKEYNAME=yantisec2\r\nSUBNETID=subnet-d260adb7\r\nREGION=us-west-2\r\n```\r\nThen just copy \"instant-chrome\" over to your /usr/bin directory\r\n\r\n\r\n## Run\r\n\r\nTo run it just type it instant-chrome and the website name like:\r\n\r\n```bash\r\ninstant-chrome www.youtube.com\r\n```\r\nor\r\n\r\n```bash\r\ninstant-chrome https://www.youtube.com\r\n```\r\n\r\nHere is a screenshot of Google Chrome running on an AWS ec2 instance.\r\n![](http://yantis-scripts.s3.amazonaws.com/screenshot_20150409-053305.jpg)\r\n\r\n\r\n## Warnings\r\n\r\nThere are security implications associated with X-Forwarding.\r\nIt is advisable to read up on it. This is a good [post](https://padraic2112.wordpress.com/2007/07/09/bad-security-201-remote-x-sessions-over-ssh/)\r\n\r\nAs an example you might actually be less secure by running chrome without a sandbox to not have to run the\r\ncontainer as privileged than simply running as privileged with sandbox mode enabled since the machine\r\nyou are connecting from might be more important to secure than the server. If that is the case you can\r\nsimply remove the --no-sandbox flag on chrome and add a ---privileged on docker.\r\n(Would love to know your thoughts on this. Maybe I should change the default around?)\r\n\r\nEither way you should just assume you are being [hacked all the time](http://www.zdnet.com/article/pwn2own-2015-the-year-every-browser-went-down/)\r\n\r\n","google":"UA-61848149-1","note":"Don't delete this file! It's used internally to help with page regeneration."}